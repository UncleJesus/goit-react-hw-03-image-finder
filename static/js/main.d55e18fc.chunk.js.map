{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","service/API.js","components/App/App.jsx","index.js"],"names":["Searchbar","state","value","page","setQuery","event","preventDefault","props","onSubmit","handleChange","target","setState","className","this","type","placeholder","onChange","Component","ImageGalleryItem","setObj","query","openModal","pictures","map","el","onClick","largeImageURL","src","webformatURL","alt","id","ImageGallery","Button","Load","color","height","width","timeout","Modal","window","removeEventListener","onClose","addEventListener","getData","axios","get","App","loading","error","isOpen","componentDidUpdate","prevProps","prevState","prevQuery","nextQuery","getFetch","scrollTo","top","behavior","then","res","data","hits","catch","finally","document","documentElement","scrollHeight","key","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d55e18fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n\n  state = {\n    value: \"\",\n    page: 1\n  };\n\n  setQuery = (event) => {\n\n    event.preventDefault();\n    this.props.onSubmit(this.state.value, this.state.page);\n\n  };\n\n  handleChange = ({target}) => {\n\n    this.setState({value: target.value});\n\n  };\n\n  render () {\n    return (<header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={this.setQuery}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          placeholder=\"Search images and photos\"\n          onChange={this.handleChange}\n          value={this.state.value}\n        />\n      </form>\n    </header>);\n  };\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './ImageGalleryItem.styles';\n\nclass ImageGalleryItem extends Component { \n\n  setObj = (query) => {\n    this.props.openModal(query);\n  }\n\n  render () {\n    \n    const {pictures} = this.props;\n\n    return (\n      pictures.map(el => \n      <li key={el.id} className=\"ImageGalleryItem\" onClick={() => {this.setObj(el.largeImageURL)}}>\n        <img src={el.webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\n      </li>)\n    )\n  }\n}\n\nImageGalleryItem.propTypes = {\n  picture: PropTypes.object,\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nclass ImageGallery extends Component { \n\n  render () {\n\n    const {pictures, openModal} = this.props;\n\n    return (\n      <ul className=\"ImageGallery\">\n        <ImageGalleryItem openModal={this.props.openModal} pictures={pictures} />\n      </ul>\n    )\n  };\n};\n\nImageGallery.propTypes = {\n  pictures: PropTypes.array,\n  onClick: PropTypes.func\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({onClick}) => {\n\n  return (\n    <button type=\"button\" onClick={onClick} className=\"Button\">Load more...</button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;","import React from 'react';\nimport Loader from \"react-loader-spinner\";\nimport './Loader.css';\n\nconst Load = function() {\n\n  return (\n    <Loader\n      className=\"Loader\"\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n\n}\n\nexport default Load;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component { \n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.props.onClose);\n  };\n\n  render () {\n\n    window.addEventListener('keydown', this.props.onClose);\n\n    return (\n      <div onClick={this.props.onClick} className=\"Overlay\">\n        <div className=\"Modal\">\n          <img src={this.props.target} alt=\"\" />\n        </div>\n      </div>\n    )\n  };\n};\n\nModal.propTypes = {\n  target: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst getData = function(query, page) {\n\n    return axios.get(`https://pixabay.com/api/?key=18951897-f7110a11ebc58b866f93acf70&q=${query}&image_type=photo&page=${page}&orientation=horizontal&per_page=12`)\n\n};\n\nexport default getData;","import React, { Component } from 'react';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Load from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport getData from '../../service/API.js';\nimport './App.css';\n\nclass App extends Component { \n\nstate = {\n  pictures: [],\n  loading: false,\n  error: null,\n  query: '',\n  page: 1,\n  target: '',\n  isOpen: false,\n  height: 0\n};\n\ncomponentDidUpdate = (prevProps, prevState) => {\n\n  const prevQuery = prevState.query;\n  const nextQuery = this.state.query;\n\n  if(prevQuery !== nextQuery) {\n    this.getFetch();\n  } else if(prevQuery === nextQuery) {\n    window.scrollTo({\n      top: prevState.height - 155,\n      behavior: 'smooth'\n    });\n  };\n\n};\n  \nonSubmit = (query, page) => {\n\n  this.setState({query: query, page: 1, pictures: []});\n\n};\n\ngetFetch = () => {\n\n  const {query, page} = this.state;\n  this.setState({loading: true});\n\n    getData(query, page).then(res => {\n      this.setState(prevState => ({pictures: [...prevState.pictures, ...res.data.hits], page: prevState.page + 1}))\n    })\n    .catch(error => this.setState({ error }))\n    .finally(() => this.setState({height: document.documentElement.scrollHeight, loading: false })\n  );\n};\n\nopenModal = (query) => {\n\n  this.setState({isOpen: true, target: query});\n\n};\n\nonClick = () => {\n  this.setState({isOpen: false, target: \"\"});\n}\n\nonClose = ({key}) => {\n  if (key === \"Escape\") {\n    this.onClick();\n  }\n};\n\nrender () {\n    return (\n      <>\n      <Searchbar onSubmit={this.onSubmit} />\n      <ImageGallery openModal={this.openModal} pictures={this.state.pictures} />\n      {this.state.loading && <Load />}\n      {this.state.pictures.length > 0 && !this.state.loading && <Button onClick={this.getFetch}/>}\n      {this.state.isOpen && <Modal onClick={this.onClick} onClose={this.onClose} target={this.state.target} />}\n      </>\n    )\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}